package org.vaadin.addons.logview;

import java.util.HashMap;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.MenuBar.Command;
import com.vaadin.ui.MenuBar.MenuItem;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TabSheet.SelectedTabChangeEvent;
import com.vaadin.ui.TabSheet.Tab;
import com.vaadin.ui.VerticalLayout;

public class LogViewComponent extends CustomComponent {
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private TabSheet tabSheet_1;

	private final HashMap<LogViewTabComponent, Tab> views = new HashMap<LogViewTabComponent, Tab>();

	@AutoGenerated
	private MenuBar menu;

	private transient final Preferences globalPrefs = Preferences.userNodeForPackage(LogViewTabComponent.class);
	private transient final Preferences tabPrefs = globalPrefs.node("tabs");

	public LogViewComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		createMenu();

		loadTabs();
		tabSheet_1.addListener(new TabSheet.SelectedTabChangeListener() {
			@Override
			public void selectedTabChange(SelectedTabChangeEvent event) {
				LogViewTabComponent lv = (LogViewTabComponent)tabSheet_1.getSelectedTab();
				globalPrefs.putInt("activetab", tabSheet_1.getTabPosition(views.get(lv)));
			}
		});
	}

	public void updateTabFilter() {
		for(LogViewTabComponent lv : views.keySet()) {
			lv.updateTabFilter();
		}
	}

	private void loadTabs() {
		int active = globalPrefs.getInt("activetab", 0);
		for(int i = 0;; i++) {
			int id = tabPrefs.getInt("" + i, -1);
			if(id == -1) {
				break;
			}
			LogViewTabComponent lv = loadTab(id);
			if(active == i) {
				tabSheet_1.setSelectedTab(lv);
			}
		}
	}

	private void createTab(String name) {
		for(int i = 0;; i++) {
			if(tabPrefs.getInt("" + i, -1) == -1) {
				int id = (int)(Math.random() * Integer.MAX_VALUE);
				tabPrefs.putInt("" + i, id);
				loadTab(id);
				return;
			}
		}
	}

	private LogViewTabComponent loadTab(int id) {
		String name = tabPrefs.get(id + ".name", "Tab " + id);
		LogViewTabComponent lv = new LogViewTabComponent(this, id, name);
		views.put(lv, tabSheet_1.addTab(lv, name));
		return lv;
	}

	private void removeTab(LogViewTabComponent lv) {
		tabSheet_1.removeTab(views.remove(lv));
		lv.remove();
		saveTabs();
	}

	private void saveTabs() {
		try {
			tabPrefs.clear();
		} catch (BackingStoreException e) {
			e.printStackTrace();
		}
		for(int i = 0; i < tabSheet_1.getComponentCount(); i++) {
			Tab tab = tabSheet_1.getTab(i);
			if(tab == null) {
				return;
			}
			LogViewTabComponent lv = (LogViewTabComponent)tab.getComponent();
			tabPrefs.putInt("" + i, lv.getId());
		}
	}

	private void createMenu() {
		MenuItem file = menu.addItem("File", null);
		file.addItem("New Tab", newCommand);
		file.addItem("Close Tab", closeCommand);
		details = file.addItem("Details", detailsCommand);
		details.setCheckable(true);
		details.setChecked(detailsVisble);
	}

	private final Command newCommand = new Command() {
		@Override
		public void menuSelected(MenuItem selectedItem) {
			createTab("Tab " + (views.size() + 1));
		}
	};

	private final Command closeCommand = new Command() {
		@Override
		public void menuSelected(MenuItem selectedItem) {
			LogViewTabComponent lv = (LogViewTabComponent)tabSheet_1.getSelectedTab();
			if(lv == null) {
				return;
			}
			removeTab(lv);
		}
	};

	private boolean detailsVisble = true;
	private MenuItem details;

	private final Command detailsCommand = new Command() {
		@Override
		public void menuSelected(MenuItem selectedItem) {
			detailsVisble = !detailsVisble;
			details.setChecked(detailsVisble);
			System.err.println("details:" + detailsVisble);
		}
	};

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// menu
		menu = new MenuBar();
		menu.setImmediate(false);
		menu.setWidth("100.0%");
		menu.setHeight("-1px");
		mainLayout.addComponent(menu);

		// tabSheet_1
		tabSheet_1 = new TabSheet();
		tabSheet_1.setImmediate(false);
		tabSheet_1.setWidth("100.0%");
		tabSheet_1.setHeight("100.0%");
		mainLayout.addComponent(tabSheet_1);
		mainLayout.setExpandRatio(tabSheet_1, 1.0f);

		return mainLayout;
	}
}
